
The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

	>>> matrix = [
	...     [1.1, -2.2, 3.3],
	...     [4.4, 5.5, -6.6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

	>>> matrix = None
	>>> print(matrix_divided(matrix, 7))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = []
	>>> print(matrix_divided(matrix, 31))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[]]
	>>> print(matrix_divided(matrix, 2))
	[[]]

	>>> matrix = [1, 2, 3]
	>>> print(matrix_divided(matrix, 5))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, "not a number", 6]
	... ]
	>>> print(matrix_divided(matrix, 4))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [
	...     [1, 2, 3, 4],
	...     [5, 6, 7]
	... ]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, "not a number"))
	Traceback (most recent call last):
	TypeError: div must be a number
